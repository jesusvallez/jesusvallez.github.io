---
type Props = {
  title: string
  description: string
  ogImagePath: string
  baseUrl: string
}

const { title, description, ogImagePath, baseUrl } = Astro.props
const IS_PROD = import.meta.env.PROD
const WEBSITE_ID = '4f591a21-f27b-46da-940f-65a39edec4f8'
---

<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
{IS_PROD && baseUrl && <base href={baseUrl} />}
{IS_PROD && <script async src="https://analytics.eu.umami.is/script.js" data-website-id={WEBSITE_ID} />}
<link rel="sitemap" href={`${baseUrl}/sitemap-index.xml`} />

<!-- Favicon -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />
<meta name="keyword" content="portfolio, javascript, typescript, react, nextjs, developer, frontend" />
{title && <link rel="canonical" href={`${baseUrl}${Astro.url.pathname}`} />}

<!-- Primary Meta Tags -->
{title && <title>{`${title}`}</title>}
{title && <meta name="title" content={`${title}`} />}
{description && <meta name="description" content={description} />}

<!-- Open Graph / Facebook -->
{title && <meta property="og:type" content="website" />}
{title && <meta property="og:url" content={`${baseUrl}${Astro.url.pathname}`} />}
{title && <meta property="og:title" content={`${title}`} />}
{description && <meta property="og:description" content={description} />}
{ogImagePath && <meta property="og:image" content={`${baseUrl}${ogImagePath}`} />}

<!-- Twitter -->
{title && <meta property="twitter:card" content="summary_large_image" />}
{title && <meta property="twitter:domain" content={baseUrl} />}
{title && <meta property="twitter:url" content={`${baseUrl}${Astro.url.pathname}`} />}
{title && <meta property="twitter:title" content={`${title}`} />}
{description && <meta property="twitter:description" content={description} />}
{ogImagePath && <meta property="twitter:image" content={`${baseUrl}${ogImagePath}`} />}
